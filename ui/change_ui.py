# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'change_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import PyQt5
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QTextCursor, QTextBlockFormat, QFont

from models import EObject
from interface import TableOutput


class ChangeUI(object):
    def __init__(self, main_form, form):
        self.main_form = main_form
        self.form = form
        self.model = EObject()

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1200, 600)
        Form.setMinimumSize(QtCore.QSize(1200, 600))
        Form.setMaximumSize(QtCore.QSize(1200, 600))
        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 1200, 600))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")

        width_field = self._get_col_size()
        self.inputs = []
        for row_index in range(len(self.model.list_fileds)):
            name_field = self.model.list_fileds[row_index]
            layout = QtWidgets.QHBoxLayout()
            layout.setObjectName(f"horizontalLayout_{row_index}")
            label = QtWidgets.QLabel(self.verticalLayoutWidget)
            label.setObjectName(f"label_{name_field}")
            label.setText(name_field.ljust(width_field, "_"))

            layout.addWidget(label)
            lineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget)
            lineEdit.setObjectName(f"lineEdit_{name_field}")
            layout.addWidget(lineEdit)
            self.inputs.append(lineEdit)

            self.verticalLayout_3.addLayout(layout)

        self.horizontalLayout.addLayout(self.verticalLayout_3)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.сreateButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.сreateButton.setObjectName("CreateButton")
        self.verticalLayout_4.addWidget(self.сreateButton)
        self.updateButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.updateButton.setObjectName("UpdateButton")
        self.verticalLayout_4.addWidget(self.updateButton)
        self.filterButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.filterButton.setObjectName("FilterButton")
        self.verticalLayout_4.addWidget(self.filterButton)
        self.deleteButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.deleteButton.setObjectName("DeleteButton")
        self.verticalLayout_4.addWidget(self.deleteButton)
        self.horizontalLayout.addLayout(self.verticalLayout_4)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.textEdit = QtWidgets.QTextEdit(self.verticalLayoutWidget)
        self.textEdit.setObjectName("textEdit")
        self.textEdit.setAlignment(Qt.AlignCenter)
        self.textEdit.setFont(QFont("Consolas"))
        self.verticalLayout.addWidget(self.textEdit)
        self.reternToChoise = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.reternToChoise.setObjectName("ReternToChoise")
        self.verticalLayout.addWidget(self.reternToChoise)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.connect_slots()

    def connect_slots(self):
        self.reternToChoise.clicked.connect(self.return_menu)
        self.filterButton.clicked.connect(self.filter_model)
        self.сreateButton.clicked.connect(self.create_model)
        self.deleteButton.clicked.connect(self.delete_model)
        self.updateButton.clicked.connect(self.update_model)


    def _get_col_size(self):
        sort_fields = sorted(self.model.list_fileds, key=len)
        return len(sort_fields[-1])

    def _get_kwargs(self):
        kwargs = {}
        for index in range(len(self.inputs)):
            field_value = self.inputs[index].text()
            field_name = self.model.list_fileds[index]
            if field_value:
                try:
                    kwargs.update({
                        field_name: self.model.list_types[index](field_value)
                    })
                except:
                    raise Exception(
                        f"Введенное поле {field_name} не соответствует типу {self.model.list_types[index]}.")
        return kwargs

    def _crud(self, get_result, patch_flag = False):
        self.textEdit.setText("")
        print_str = "Результат:\n"
        try:
            kwargs = self._get_kwargs()
        except Exception as e:
            self.textEdit.setText(str(e))
            self.textEdit.setAlignment(Qt.AlignCenter)
            return
        try:
            if patch_flag:
                if "id" not in kwargs.keys():
                    raise Exception("Для обновления поле ID обязательно.")
                id = kwargs.pop("id")
                result = get_result(id,**kwargs)
            else:
                result = get_result(**kwargs)
        except Exception as e:
            self.textEdit.setText(str(e))
            self.textEdit.setAlignment(Qt.AlignCenter)
            return

        table_output = TableOutput(result, self.model.list_fileds)

        #Выравнивание по центру
        for row in (print_str + str(table_output)).split('\n'):
            self.textEdit.append(row)
            cursor = self.textEdit.textCursor()
            block = cursor.blockFormat()
            block.setAlignment(Qt.AlignCenter)
            cursor.mergeBlockFormat(block)
            self.textEdit.setTextCursor(cursor)


    def create_model(self):
        self._crud(self.model.create)

    def filter_model(self):
        self._crud(self.model.filter)

    def delete_model(self):
        self._crud(self.model.delete)

    def update_model(self):
        self._crud(self.model.patch, True)

    def return_menu(self):
        self.form.hide()
        self.main_form.show()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Интерфейс к БД"))
        self.сreateButton.setText(_translate("Form", "Создать"))
        self.updateButton.setText(_translate("Form", "Обновить"))
        self.filterButton.setText(_translate("Form", "Найти"))
        self.deleteButton.setText(_translate("Form", "Удалить"))
        self.reternToChoise.setText(_translate("Form", "Вернуться к выбору таблицы"))

    def set_model(self, model):
        self.model = model
        self.verticalLayoutWidget.close()
        self.setupUi(self.form)
